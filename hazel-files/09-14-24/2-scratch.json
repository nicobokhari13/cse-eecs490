{"zipper":"((selection((focus Left)(content())(mode Normal)))(backpack())(relatives((siblings(((Secondary((id de8d9f36-1efe-4baa-acb2-09ae62210c58)(content(Comment\"# Recursive Data Types #\"))))(Secondary((id 586ecaf0-e344-40c1-9bc7-057c77d4afbd)(content(Whitespace\"\\n\"))))(Secondary((id d4221cef-f9d1-444f-bc83-ef7519a78e1e)(content(Comment\"# every list extends from an empty list #\"))))(Secondary((id 3b33e5cd-c570-4cf9-b23d-1760e6699c92)(content(Whitespace\"\\n\"))))(Secondary((id 59e6048f-f1b6-49e7-aba7-56224716783b)(content(Comment\"# :: is called \\\"cons\\\" and connects the elements recursively, starting from the right end #\"))))(Secondary((id 6960d691-12ab-4c92-87d3-3bf1f40e0134)(content(Whitespace\"\\n\"))))(Secondary((id 9b1036e2-5ba9-4c98-80b8-2de7055cdf19)(content(Comment\"# [] is syntactic sugar for cons :: #\"))))(Secondary((id a3dacb13-bc33-4d84-959e-6c0333f79812)(content(Whitespace\"\\n\"))))(Tile((id 244776cc-732e-49b3-8043-1456deba7a09)(label(let = in))(mold((out Exp)(in_(Pat Exp))(nibs(((shape Convex)(sort Exp))((shape(Concave 17))(sort Exp))))))(shards(0 1 2))(children(((Secondary((id fbd3f97a-7d1d-46e2-88e3-ee43260d8739)(content(Whitespace\" \"))))(Tile((id c99f38fc-a4b3-4a2c-b81b-605aba23cb62)(label(empty))(mold((out Pat)(in_())(nibs(((shape Convex)(sort Pat))((shape Convex)(sort Pat))))))(shards(0))(children())))(Secondary((id 1d31c394-fefe-4d0e-9bed-df18c0c71d14)(content(Whitespace\" \")))))((Secondary((id 730107f1-e70c-46d0-b353-26420859b25b)(content(Whitespace\" \"))))(Tile((id 63af8dca-9c32-442a-8257-25999de185fb)(label([]))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Secondary((id 951df635-4532-457c-9da5-c9427ad3bb61)(content(Whitespace\" \")))))))))(Secondary((id 5643295a-56a1-4d08-b327-83b917166c23)(content(Whitespace\" \"))))(Secondary((id 6c21cedc-74f7-4a79-bf37-df0cd3efc670)(content(Whitespace\"\\n\"))))(Tile((id 9f855886-4501-4ac5-9776-040856ca5a1f)(label(let = in))(mold((out Exp)(in_(Pat Exp))(nibs(((shape Convex)(sort Exp))((shape(Concave 17))(sort Exp))))))(shards(0 1 2))(children(((Secondary((id beabd39b-539a-4a87-9c75-0b1f85deb091)(content(Whitespace\" \"))))(Tile((id ac6a6b81-3714-4a4d-b34b-a1c10b8de531)(label(mylist))(mold((out Pat)(in_())(nibs(((shape Convex)(sort Pat))((shape Convex)(sort Pat))))))(shards(0))(children())))(Secondary((id 24b51999-57c0-45f8-9afc-9a73b199a840)(content(Whitespace\" \")))))((Secondary((id 6792290f-ec90-440f-8e22-8ef2f3283eec)(content(Whitespace\" \"))))(Tile((id 8fcd8f2c-ad39-4605-987f-73147235cc91)(label(3))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Tile((id 5fc27508-5675-4b56-9912-4382f83812dd)(label(::))(mold((out Exp)(in_())(nibs(((shape(Concave 7))(sort Exp))((shape(Concave 7))(sort Exp))))))(shards(0))(children())))(Tile((id 89da2871-b10a-41aa-8304-245b8a74c85c)(label(4))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Tile((id a70d039e-a8ba-4726-939d-c9f27234e65c)(label(::))(mold((out Exp)(in_())(nibs(((shape(Concave 7))(sort Exp))((shape(Concave 7))(sort Exp))))))(shards(0))(children())))(Tile((id de57e44e-3b40-467c-b55b-d9756f8f65be)(label(5))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Tile((id b9004f54-64f7-4239-81ea-5a687314e9a1)(label(::))(mold((out Exp)(in_())(nibs(((shape(Concave 7))(sort Exp))((shape(Concave 7))(sort Exp))))))(shards(0))(children())))(Tile((id dd760671-af73-465f-b6eb-b5c1f6e28b3f)(label([]))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Secondary((id cbe30bc4-5a05-4b93-9ce8-874ef7d54460)(content(Whitespace\" \")))))))))(Secondary((id cfde2f45-e288-4397-9d5f-46a27c9db8eb)(content(Whitespace\" \"))))(Secondary((id 6449f7ef-8525-4500-90cc-8e945b865eb1)(content(Whitespace\"\\n\"))))(Tile((id eaefc593-79da-4fb4-8c87-be1fe74892bf)(label(let = in))(mold((out Exp)(in_(Pat Exp))(nibs(((shape Convex)(sort Exp))((shape(Concave 17))(sort Exp))))))(shards(0 1 2))(children(((Secondary((id 45ec2b5c-a49d-4075-bd01-fb1183025761)(content(Whitespace\" \"))))(Tile((id aea1174a-7846-42c3-9b3d-aecaad68bf7a)(label(mylist'))(mold((out Pat)(in_())(nibs(((shape Convex)(sort Pat))((shape Convex)(sort Pat))))))(shards(0))(children())))(Secondary((id 3d84c19f-597d-4a4d-9646-9396e55466bc)(content(Whitespace\" \")))))((Secondary((id 25ad0827-7fea-422d-9beb-fb329cdfdbae)(content(Whitespace\" \"))))(Tile((id 4623cba7-bce6-4b09-b01b-e6ce785d9923)(label([ ]))(mold((out Exp)(in_(Exp))(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0 1))(children(((Tile((id de42edb2-3f1d-4c68-b89f-6e2293969a51)(label(3))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Tile((id 65e5d1b1-8317-4507-9723-ef6ab5ce4f75)(label(,))(mold((out Exp)(in_())(nibs(((shape(Concave 15))(sort Exp))((shape(Concave 15))(sort Exp))))))(shards(0))(children())))(Tile((id 14d05c73-767d-46ae-882c-66c12c134186)(label(4))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Tile((id c7508591-95bc-40af-a7a7-a9bde41011a1)(label(,))(mold((out Exp)(in_())(nibs(((shape(Concave 15))(sort Exp))((shape(Concave 15))(sort Exp))))))(shards(0))(children())))(Tile((id 96225051-ef1c-4368-b519-662e05c12c46)(label(5))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children()))))))))(Secondary((id e12932f6-6f40-4114-8f34-f1e814eb8541)(content(Whitespace\" \")))))))))(Secondary((id 9cddd8d6-464f-445d-a105-491f80250c18)(content(Whitespace\" \"))))(Secondary((id 5d50a8f8-25fd-4ae0-8b60-e2240126e83c)(content(Whitespace\"\\n\"))))(Secondary((id 14b9cf69-2a59-48fa-a33a-3e645ce101cc)(content(Whitespace\"\\n\"))))(Secondary((id d53c7375-ef05-4de6-a427-2a60cbbb160a)(content(Comment\"#Operations on a list: index #\"))))(Secondary((id 438ce616-7243-47b3-aa4c-ab045e803efd)(content(Whitespace\"\\n\"))))(Secondary((id dceaeb98-bb24-4aab-a849-83db6f04ff9b)(content(Comment\"#How to deconstruct lists to perform operations#\"))))(Secondary((id 537801fd-b3b7-4112-89cc-a2d895a670b4)(content(Whitespace\"\\n\"))))(Secondary((id 88f389ab-33f7-4fe6-9b6a-170112b326c1)(content(Comment\"# Case Analysis on the scrutinee (mylist) #\"))))(Secondary((id 5cce4e7d-1437-4ff1-8fb6-b61ddc800211)(content(Whitespace\"\\n\"))))(Secondary((id 353ec9eb-35ba-433e-a515-8035a529c628)(content(Whitespace\"\\n\"))))(Tile((id 8b9ed633-5811-4c3f-8da8-0ab7e9eca143)(label(case end))(mold((out Exp)(in_(Rul))(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0 1))(children(((Secondary((id 02bbd73a-5ae8-41d1-9544-907c13ff96f2)(content(Whitespace\" \"))))(Tile((id 3f8b0b74-e11c-41b3-b3e6-5b45902d7646)(label(mylist))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Secondary((id bea0ec5a-ba67-43d2-a8f6-2ce796679b98)(content(Whitespace\"\\n\"))))(Tile((id 5de6513f-8bda-48a7-9224-826bbfcc443d)(label(| =>))(mold((out Rul)(in_(Pat))(nibs(((shape(Concave 21))(sort Exp))((shape(Concave 21))(sort Exp))))))(shards(0 1))(children(((Secondary((id 3797bb38-27ec-4db5-b866-e66cba034560)(content(Whitespace\" \"))))(Tile((id 36af87bf-cb65-4233-826f-b8c154477c0c)(label([]))(mold((out Pat)(in_())(nibs(((shape Convex)(sort Pat))((shape Convex)(sort Pat))))))(shards(0))(children())))(Secondary((id 95a57b90-a4f1-4717-84b9-11157e25ac07)(content(Whitespace\" \")))))))))(Secondary((id b34648dc-2af9-4954-98c9-d7f8db111e8c)(content(Whitespace\" \"))))(Grout((id a4d402f2-03b7-4f7c-8a57-2c2cb45b159f)(shape Convex)))(Secondary((id caf2b1fc-2a55-4e83-922b-85a6722f1bc0)(content(Whitespace\"\\n\"))))(Tile((id 4219fb91-4786-44ae-9748-841fecc6d5e4)(label(| =>))(mold((out Rul)(in_(Pat))(nibs(((shape(Concave 21))(sort Exp))((shape(Concave 21))(sort Exp))))))(shards(0 1))(children(((Secondary((id 0e6bb898-bafb-411b-a4db-4d9a5dee8852)(content(Whitespace\" \"))))(Tile((id 06a66feb-89fb-4138-9065-e06ff351bead)(label(hd))(mold((out Pat)(in_())(nibs(((shape Convex)(sort Pat))((shape Convex)(sort Pat))))))(shards(0))(children())))(Tile((id 3948184e-bdaa-4ae4-85e4-6458f9ac621a)(label(::))(mold((out Pat)(in_())(nibs(((shape(Concave 7))(sort Pat))((shape(Concave 7))(sort Pat))))))(shards(0))(children())))(Tile((id 53f01e81-b6f5-4c38-afc3-c57c308a394d)(label(tl))(mold((out Pat)(in_())(nibs(((shape Convex)(sort Pat))((shape Convex)(sort Pat))))))(shards(0))(children())))(Secondary((id 1ea18f8f-1660-4721-9a1a-2cbcf8b91d58)(content(Whitespace\" \")))))))))(Secondary((id 70d7ba8b-b4d8-499e-a9b8-4c40ceb345f1)(content(Whitespace\" \"))))(Tile((id b4ae3e93-7057-4a3d-890b-a9ed8ad3e987)(label(\"(\"\")\"))(mold((out Exp)(in_(Exp))(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0 1))(children(((Tile((id ece09543-b15c-4764-86fc-830ac89f8291)(label(hd))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children())))(Tile((id dbcda524-34c4-4934-9a45-253866605fb2)(label(,))(mold((out Exp)(in_())(nibs(((shape(Concave 15))(sort Exp))((shape(Concave 15))(sort Exp))))))(shards(0))(children())))(Tile((id bb74fa29-7388-4007-9686-444c7e380cb0)(label(tl))(mold((out Exp)(in_())(nibs(((shape Convex)(sort Exp))((shape Convex)(sort Exp))))))(shards(0))(children()))))))))(Secondary((id f913892d-33e1-497d-a266-82594b4b4e19)(content(Whitespace\" \"))))(Secondary((id f0b1288e-b170-4080-9a9b-31c7ea751232)(content(Comment\"#As the scrutinee is pattern matched into hd::tl, the list is deconstructed into its basic form (head element + tail)#\"))))(Secondary((id cd713d2e-1129-4a18-a43f-03b0a830501e)(content(Whitespace\"\\n\"))))))))))((Secondary((id fb6c3863-3d78-41cd-848f-f80ce552a9bc)(content(Whitespace\"\\n\"))))(Secondary((id ea878101-025c-4a4f-b24a-27437c23af35)(content(Comment\"# For example, hd = 3 and tl = [4, 5] #\"))))(Secondary((id 47f46437-007b-46ac-9cef-c16ca3fd62f4)(content(Whitespace\"\\n\")))))))(ancestors())))(caret Outer))","backup_text":"# Recursive Data Types #\n# every list extends from an empty list #\n# :: is called \"cons\" and connects the elements recursively, starting from the right end #\n# [] is syntactic sugar for cons :: #\nlet empty = [] in \nlet mylist = 3::4::5::[] in \nlet mylist' = [3,4,5] in \n\n#Operations on a list: index #\n#How to deconstruct lists to perform operations#\n# Case Analysis on the scrutinee (mylist) #\n\ncase mylist\n| [] =>  \n| hd::tl => (hd,tl) #As the scrutinee is pattern matched into hd::tl, the list is deconstructed into its basic form (head element + tail)#\nend\n# For example, hd = 3 and tl = [4, 5] #\n"}